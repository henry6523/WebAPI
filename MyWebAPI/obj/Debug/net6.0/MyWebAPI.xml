<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MyWebAPI</name>
    </assembly>
    <members>
        <member name="M:MyWebAPI.Controllers.AccountController.Register(BusinessLogicLayer.DTO.UserDTO)">
            <summary>
            Register a new User to Login
            </summary>
            <returns></returns>
            <remarks>
            Input username, email and password to register.
            </remarks>
            <response code="200">Registered successfully.</response>
        </member>
        <member name="M:MyWebAPI.Controllers.AccountController.Login(BusinessLogicLayer.DTO.UserInfo)">
            <summary>
            Login to System
            </summary>
            <returns></returns>
            <remarks>
            Input username and password to login.
            </remarks>
            <response code="200">Login successfully.</response>
        </member>
        <member name="M:MyWebAPI.Controllers.CategoryController.GetAllCategories(System.String,System.Nullable{System.Int32},System.Int32)">
            <summary>
            Show list of Category
            </summary>
            <returns></returns>
            <param name="filterValue">Input the Value you want to filt. Filt by CategoryName.</param>
            <param name="page">Index starting from 0 to designate the page for retrieval.</param>
            <param name="pageSize">Number of results per page to return.</param>
            <remarks>
            Returns the list of **Category** that have been assigned access control on the referenced resource.
            </remarks>
            <response code="200">Successfully returns a list of Category.</response>
        </member>
        <member name="M:MyWebAPI.Controllers.CategoryController.GetCategoryById(System.Int32)">
            <summary>
            Get a Category by CategoryId
            </summary>
            <param name="id">Input Category's Id to see **Category's info**</param>
            <returns></returns>
            <remarks>
            Retrieve *categories* by **Category Id** and can custom select *any category*.
            
            **Note**: If you need to find a Category but do not know the Category's Name,
            you can search on the System through the **Category Id**
            </remarks>
            <response code="200">Information of Category</response>
            <response code="404">Category Id Not Found!!</response>
        </member>
        <member name="M:MyWebAPI.Controllers.CategoryController.CreateCategory(BusinessLogicLayer.DTO.CreateCategoryDTO)">
            <summary>
            Create a Category
            </summary>
            <returns></returns>
            <remarks>
            Create a Category by input **Category Name**.
            </remarks>
            <response code="201">Successfully created a Category.</response>
            <response code="400">Category domain is not among the registered SSO 
            domains for this System!!</response>
        </member>
        <member name="M:MyWebAPI.Controllers.CategoryController.UpdateCategory(System.Int32,BusinessLogicLayer.DTO.CreateCategoryDTO)">
            <summary>
            Update a Category by CategoryId
            </summary>
            <param name="id">Input CategoryId to **update** Category's info.</param>
            <param name="createCategoryDTO"></param>
            <returns></returns>
            <remarks>
            Update the specified _category_ to the System by **Category Id**.
            </remarks>
            <response code="204">Category's Info updated successfully</response>
            <response code="400">CategoryId domain is not among the registered SSO 
            domains for this System!!</response>
            <response code="404">CategoryId Not Found!!</response>
        </member>
        <member name="M:MyWebAPI.Controllers.CategoryController.DeleteCategory(System.Int32)">
            <summary>
            Delete a Category's Info by CategoryId
            </summary>
            <param name="id">Input CategoryId to **delete** Category's info.</param>
            <returns></returns>
            <remarks>
            **Note:** Removes the specified Category from the list by **CategoryId**.
            
            </remarks>
            <response code="204">Category's Info deleted successfully</response>
            <response code="404">CategoryId Not Found!!</response>
        </member>
        <member name="M:MyWebAPI.Controllers.ClassController.GetAllClasses(System.String,System.Nullable{System.Int32},System.Int32)">
            <summary>
            Show list of Class
            </summary>
            <returns></returns>
            <param name="filterValue">Input the Value you want to filt. Filt by ClassName.</param>
            <param name="page">Index starting from 0 to designate the page for retrieval.</param>
            <param name="pageSize">Number of results per page to return</param>
            <remarks>
            Returns the list of **Class** that have been assigned access control on the referenced resource.
            </remarks>
            <response code="200">Successfully returns a list of Class.</response>
        </member>
        <member name="M:MyWebAPI.Controllers.ClassController.GetClassById(System.Int32)">
            <summary>
            Get a Class by ClassId
            </summary>
            <param name="id">Input ClassId to see **Class's info**</param>
            <returns></returns>
            <remarks>
            Retrieve *class* by **ClassId** and can custom select *any class*.
            
            **Note**: If you need to find a Class but do not know the Class's Name,
            you can search on the System through the **ClassId**.
            </remarks>
            <response code="200">Information of Class</response>
            <response code="404">Class Id Not Found!!</response>
        </member>
        <member name="M:MyWebAPI.Controllers.ClassController.CreateClass(BusinessLogicLayer.DTO.CreateClassDTO)">
            <summary>
            Create a Class
            </summary>
            <returns></returns>
            <remarks>
            Create a Class by input **Class Name**.
            </remarks>
            <response code="201">Successfully created a Class.</response>
            <response code="400">Class domain is not among the registered SSO 
            domains for this System!!</response>
        </member>
        <member name="M:MyWebAPI.Controllers.ClassController.UpdateClass(System.Int32,BusinessLogicLayer.DTO.CreateClassDTO)">
            <summary>
            Update a Class by ClassId
            </summary>
            <param name="id">Input ClassId to **update** Class's info.</param>
            <param name="createClassDTO"></param>
            <returns></returns>
            <remarks>
            Update the specified _class_ to the System by **Class Id**.
            </remarks>
            <response code="204">Class's Info updated successfully</response>
            <response code="400">ClassId domain is not among the registered SSO 
            domains for this System!!</response>
            <response code="404">ClassId Not Found!!</response>
        </member>
        <member name="M:MyWebAPI.Controllers.ClassController.DeleteClass(System.Int32)">
            <summary>
            Delete a Class's Info by ClassId
            </summary>
            <param name="id">Input ClassId to **delete** Class's info.</param>
            <returns></returns>
            <remarks>
            **Note:** Removes the specified Class from the list by **ClassId**.
            
            </remarks>
            <response code="204">Class's Info deleted successfully</response>
            <response code="404">ClassId Not Found!!</response>
        </member>
        <member name="M:MyWebAPI.Controllers.CourseController.GetAllCourses(System.String,System.Nullable{System.Int32},System.Int32)">
            <summary>
            Show list of Course
            </summary>
            <returns></returns>
            <param name="filterValue">Input the Value you want to filt. Filt by CourseName.</param>
            <param name="page">Index starting from 0 to designate the page for retrieval.</param>
            <param name="pageSize">Number of results per page to return</param>
            <remarks>
            Returns the list of **Course** that have been assigned access control on the referenced resource.
            </remarks>
            <response code="200">Successfully returns a list of Source.</response>
        </member>
        <member name="M:MyWebAPI.Controllers.CourseController.GetCourseById(System.Int32)">
            <summary>
            Get a Course by CourseId
            </summary>
            <param name="id">Input CourseId to see **Course's info**</param>
            <returns></returns>
            <remarks>
            Retrieve *course* by **CourseId** and can custom select *any course*.
            
            **Note**: If you need to find a Course but do not know the Course's Name,
            you can search on the System through the **CourseId**
            </remarks>
            <response code="200">Information of Course</response>
            <response code="404">CourseId Not Found!!</response>
        </member>
        <member name="M:MyWebAPI.Controllers.CourseController.CreateCourse(System.Int32,BusinessLogicLayer.DTO.CreateCourseDTO)">
            <summary>
            Create a Course
            </summary>
            <returns></returns>
            <remarks>
            Create a Course by input **Course Name**.
            </remarks>
            <response code="201">Successfully created a Course.</response>
            <response code="400">Course domain is not among the registered SSO 
            domains for this System!!</response>
        </member>
        <member name="M:MyWebAPI.Controllers.CourseController.UpdateCourse(System.Int32,BusinessLogicLayer.DTO.CreateCourseDTO)">
            <summary>
            Update a Course by CourseId
            </summary>
            <param name="id">Input CourseId to **update** Course's info.</param>
            <param name="createCourseDTO"></param>
            <returns></returns>
            <remarks>
            Update the specified _course_ to the System by **CourseId**.
            </remarks>
            <response code="204">Course's Info updated successfully</response>
            <response code="400">CourseId domain is not among the registered SSO 
            domains for this System!!</response>
            <response code="404">CourseId Not Found!!</response>
        </member>
        <member name="M:MyWebAPI.Controllers.CourseController.DeleteCourse(System.Int32)">
            <summary>
            Delete a Course's Info by CourseId
            </summary>
            <param name="id">Input CourseId to **delete** Course's info.</param>
            <returns></returns>
            <remarks>
            **Note:** Removes the specified Course from the list by **CourseId**.
            
            </remarks>
            <response code="204">Course's Info deleted successfully</response>
            <response code="404">CourseId Not Found!!</response>
        </member>
        <member name="M:MyWebAPI.Controllers.StudentController.GetAllStudents(System.String,MyWebAPI.Controllers.StudentController.FilterType,System.Nullable{System.Int32},System.Int32)">
            <summary>
            Show list of Student
            </summary>
            <param name="filterValue">Input the Value you want to filt. This parameter is case-insensitive.</param>
            <param name="filterBy">**0-->StudentName**      **1-->Email** </param>
            <param name="page">Index starting from 0 to designate the page for retrieval.</param>
            <param name="pageSize">Number of results per page to return</param>
            <returns></returns>
            <remarks>
            Returns the list of **Student** that have been assigned access control on the referenced resource.
            </remarks>
            <response code="200">Successfully returns a list of Student.</response>
        </member>
        <member name="M:MyWebAPI.Controllers.StudentController.GetStudentByCard(System.String)">
            <summary>
            Get a Student by Student Card
            </summary>
            <param name="studentCard">Input Student Card to see **Student's info**</param>
            <returns></returns>
            <remarks>
            Retrieve *student* by **Student Card** and can custom select *any student*.
            
            **Note**: If you need to find a Student but do not know the Student's Name,
            you can search on the System through the **Student Card**
            </remarks>
            <response code="200">Information of Student</response>
            <response code="404">StudentCard Not Found!!</response>
        </member>
        <member name="M:MyWebAPI.Controllers.StudentController.CreateStudent(System.Int32,System.Int32,BusinessLogicLayer.DTO.StudentDTO)">
             <summary>
             Create a new Student
             </summary>
             <returns></returns>
             <remarks>
             Create a new Student by input the information like **Course Id** and **Class Id**.
             </remarks>
            <param name="courseId">Input CourseId to **create** Student's info.</param>
            <param name="classesId">Input ClassesId to **create** Student's info.</param>
             <param name="studentCreate"></param>
             <response code="201">Successfully created a Student.</response>
             <response code="400">Student domain is not among the registered SSO 
             domains for this System!!</response>
        </member>
        <member name="M:MyWebAPI.Controllers.StudentController.UpdateStudent(System.String,BusinessLogicLayer.DTO.StudentDTO)">
            <summary>
            Update a Student by Student Card
            </summary>
            <param name="studentCard">Input StudentCard to **update** Student's info.</param>
            <param name="studentDTO"></param>
            <returns></returns>
            <remarks>
            Update the specified _student_ to the System by **Student Card**.
            </remarks>
            <response code="204">Student's Info updated successfully</response>
            <response code="400">Student Card domain is not among the registered SSO 
            domains for this System!!</response>
            <response code="404">Student Card Not Found!!</response>
        </member>
        <member name="M:MyWebAPI.Controllers.StudentController.DeleteStudent(System.String)">
            <summary>
            Delete a Student's Info by Student Card
            </summary>
            <param name="studentCard">Input Student Card to **delete** Course's info.</param>
            <returns></returns>
            <remarks>
            **Note:** Removes the specified Student from the list by **Student Card**.
            
            </remarks>
            <response code="204">Student's Info deleted successfully</response>
            <response code="404">Student Card Not Found!!</response>
        </member>
        <member name="M:MyWebAPI.Controllers.TeacherController.GetAllTeachers(System.String,System.Nullable{System.Int32},System.Int32)">
            <summary>
            Show list of Teacher
            </summary>
            <returns></returns>
            <param name="filterValue">Input the Value you want to filt. Filt by TeacherName.</param>
            <param name="page">Index starting from 0 to designate the page for retrieval.</param>
            <param name="pageSize">Number of results per page to return</param>
            <remarks>
            Returns the list of **Teacher** that have been assigned access control on the referenced resource.
            </remarks>
            <response code="200">Successfully returns a list of Teacher.</response>
        </member>
        <member name="M:MyWebAPI.Controllers.TeacherController.GetTeacher(System.Int32)">
            <summary>
            Get a Teacher by TeacherId
            </summary>
            <param name="id">Input Teacher Id to see **Teacher's info**</param>
            <returns></returns>
            <remarks>
            Retrieve *teacher* by **Teacher Id** and can custom select *any teacher*.
            
            **Note**: If you need to find a Teacher but do not know the Teacher's Name,
            you can search on the System through the **Teacher Id**
            </remarks>
            <response code="200">Information of Teacher</response>
            <response code="404">TeacherId Not Found!!</response>
        </member>
        <member name="M:MyWebAPI.Controllers.TeacherController.AddTeacher(BusinessLogicLayer.DTO.CreateTeacherDTO)">
            <summary>
            Create a new Teacher
            </summary>
            <returns></returns>
            <remarks>
            Create a new Teacher by input the information like **Teacher Name**, **Email** and **Phone No**.
            </remarks>
            <response code="201">Successfully created a Teacher.</response>
            <response code="400">Teacher domain is not among the registered SSO 
            domains for this System!!</response>
        </member>
        <member name="M:MyWebAPI.Controllers.TeacherController.UpdateTeacher(System.Int32,BusinessLogicLayer.DTO.CreateTeacherDTO)">
            <summary>
            Update a Teacher by TeacherId
            </summary>
            <param name="id">Input TeacherId to **update** Teacher's info.</param>
            <param name="createTeacherDTO"></param>
            <returns></returns>
            <remarks>
            Update the specified _teacher_ to the System by **TeacherId**.
            </remarks>
            <response code="204">Teacher's Info updated successfully</response>
            <response code="400">TeacherId domain is not among the registered SSO 
            domains for this System!!</response>
            <response code="404">TeacherId Not Found!!</response>
        </member>
        <member name="M:MyWebAPI.Controllers.TeacherController.DeleteTeacher(System.Int32)">
            <summary>
            Delete a Teacher's Info by TeacherId
            </summary>
            <param name="id">Input TeacherId to **delete** Teacher's info.</param>
            <returns></returns>
            <remarks>
            **Note:** Removes the specified Teacher from the list by **TeacherId**.
            
            </remarks>
            <response code="204">Teacher's Info deleted successfully</response>
            <response code="404">TeacherId Not Found!!</response>
        </member>
        <member name="M:MyWebAPI.Controllers.UsersController.GetListUsers">
            <summary>
            Show list of User
            </summary>
            <returns></returns>
            <remarks>
            Returns the lists of **User** that have been assigned access control on the referenced resource.
            </remarks>
            <response code="200">Successfully returns a list of User.</response>
        </member>
        <member name="M:MyWebAPI.Controllers.UsersController.Get">
            <summary>
            Show list Roles of User
            </summary>
            <returns></returns>
            <remarks>
            Returns the list of **Roles** that have been assigned access control on the referenced resource.
            </remarks>
            <response code="200">Successfully returns a list of User Roles.</response>
        </member>
        <member name="M:MyWebAPI.Controllers.UsersController.AddRole(BusinessLogicLayer.DTO.RoleDTO)">
            <summary>
            Add Roles into System
            </summary>
            <returns></returns>
            <remarks>
            Add Roles into System
            </remarks>
            <response code="200">Successfully add a role into System.</response>
        </member>
        <member name="M:MyWebAPI.Controllers.UsersController.AssignRole(BusinessLogicLayer.DTO.EditRoleDTO)">
            <summary>
            Assign roles into User
            </summary>
            <returns></returns>
            <remarks>
            Assign role into an User
            </remarks>
            <response code="200">Successfully assign role into an User.</response>
        </member>
        <member name="M:MyWebAPI.Controllers.UsersController.RemoveRole(BusinessLogicLayer.DTO.EditRoleDTO)">
            <summary>
            Delete User's Role
            </summary>
            <returns></returns>
            <remarks>
            Delete role from an User.
            </remarks>
            <response code="200">Successfully deleted User's Role</response>
        </member>
        <member name="M:DataAccessLayer.Repository.AddressController.GetAddressByStudentCard(System.String)">
            <summary>
            Get a Student's address by StudentCard
            </summary>
            <param name="studentCard">Input Student Card to see **the address's info** of Student</param>
            <returns></returns>
            <remarks>
            Retrieve *student's address* by **Student Card** and can custom select *any student's address*.
            
            **Note**: If you need to find a Address of Student but do not know the Student's Name,
            you can search on the System through the **Student Card**
            </remarks>
            <response code="200">Data Loaded Successful!</response>
            <response code="404">Student's Address Not Found</response>
        </member>
        <member name="M:DataAccessLayer.Repository.AddressController.CreateAddress(System.String,BusinessLogicLayer.DTO.AddressDTO)">
            <summary>
            Create a Student's Address by new StundentCard
            </summary>
            <param name="studentCard">Input Student Card to **create** new Student address's info.</param>
            <param name="addressDTO"></param>
            <returns></returns>
            <remarks>
            Create the specified _address_ to the System by **Student Card**.
            
            
            **Note**: If the System uses *Single Sign-On* (SSO) and is configured to block external (non-SSO) users from joining,
            you can only invite **Student Card** from the domains associated with this System.
            </remarks>
            <response code="201">Student's Address created successfully</response>
            <response code="400">Student Card domain is not among the registered SSO 
            domains for this System!!</response>
        </member>
        <member name="M:DataAccessLayer.Repository.AddressController.UpdateAddress(System.String,BusinessLogicLayer.DTO.AddressDTO)">
            <summary>
            Update a Student's Address by StundentCard
            </summary>
            <param name="studentCard">Input Student Card to **update** new Student address's info.</param>
            <param name="addressDTO"></param>
            <returns></returns>
            <remarks>
            Update the specified _address_ to the System by **Student Card**.
            </remarks>
            <response code="204">Student's Address updated successfully</response>
            <response code="400">Student Card domain is not among the registered SSO 
            domains for this System!!</response>
            <response code="404">StudentCard Not Found!!</response>
        </member>
        <member name="M:DataAccessLayer.Repository.AddressController.DeleteAddress(System.String)">
            <summary>
            Delete a Student's Address by StundentCard
            </summary>
            <param name="studentCard">Input Student Card to **delete** Student address's info.</param>
            <returns></returns>
            <remarks>
            **Note:** Removes the specified students's address from the class by **Student Card**.
            If the specified student was invited to the class but has not joined yet,
            this cancels their invitation.
            </remarks>
            <response code="204">Student's Address deleted successfully</response>
            <response code="404">StudentCard Not Found!!</response>
        </member>
    </members>
</doc>
